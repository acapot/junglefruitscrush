	package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flashx.textLayout.operations.InsertInlineGraphicOperation;	import flash.display.DisplayObject;	import flash.display.Stage;	import flash.display.Loader;		import flash.net.*;	import flash.events.*;	import flash.text.TextField;	import flash.xml.*;	import flash.external.ExternalInterface;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.media.Sound;	import flash.media.SoundChannel;			public class Main extends MovieClip {						public static var levels:Levels;		//public static var level2:Level2;		public static var map:Map;		//public var db:DB = new DB();		//public var friendsList:XMLList;		//public var stageRef:Stage;		//public var stage1:Stage1;		public static var score:int;		public static var lives:int;		public static var level:int;		public static var moves:int;		public static var ecoFruits:int;		public static var ecoFruitsCount:int;		public static var stageRef:Stage;		public static var yogFruits:int;		public static var yogFruitsCount:int;						public function Main() {			// constructor code						init();						//FBPic.getPic();		}				public function init()		{			//loadWindow.source = "magic_world3.jpg";						stop();						//add a reference to stage 			stageRef = stage;						//load the game-sounds			GameSounds.loadSound();						//add the map to stage			map = new Map(-130,0);			map.btnsArray[1].stop;			stageRef.addChild(map);						//start the game-variabels			level = 1;			score = 0;			moves = 0;			lives = 5;			ecoFruits = 0;			ecoFruitsCount = 0;			yogFruits = 0;			yogFruitsCount = 0;						backToMap();					}						public static function levelGame(event:Event)		{			//			//if (Boolean(stageRef.getChildByName('levels'))) 			if(level > 1)			{								levels.setCurrentLevel(level);				levels.init();				levels.visible = true;					//trace("si pasa:"+Boolean(stageRef.getChildByName('levels')));				levels.getBtnLevelCompleted().removeEvents();								//trace("typeof btnLevelCompleted22222: "+typeof levels.btnLevelCompleted);				//trace("que tiene22222: "+levels.btnLevelCompleted);							}			else			{				Fruits.size=70;				//trace("levelppppppp:"+level);				levels = new Levels();				levels.setCurrentLevel(level);				levels.init();								//trace(level);				stageRef.addChild(levels);			}						//Fruits.runMotor = true;			map.visible = false;			level++;			trace("level saliendo de generacion: "+level);		}				public static function backToMap()		{			map.visible = true;									map.btnsArray[level-1].play();			map.btnsArray[level-1].addEventListener(MouseEvent.CLICK, levelGame);						if(map.btnsArray[level-2])			{				map.btnsArray[level-2].gotoAndStop(15);				map.btnsArray[level-2].removeEventListener(MouseEvent.CLICK, levelGame);			}					}	}	}